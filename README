Quick Run v1 (run with data connection)
summary : run yolov4-tiny detection, if weapon detected send notification to android and update data to database firebase, and send stream to android app (only works on LAN for streaming, but you can update ip with ngrok to stream externally through internet) using flask_opencv_streamer, add more delay when processing.
1. open Raspberry Pi terminal
2. cd /home/pi/TA_weapon_detection_1611512012
3. install apk android in folder "/home/pi/TA_weapon_detection_1611512012/androidAPP" filename : Final_App_checkpoint7_DONE100over100.apk
4. run command "python3 detect_video_final.py"

Quick run v2 (run without data_connection (localhost only)
summary : run yolov4-tiny detection, if weapon detected the output is on terminal only, no database connection or android app required, means less delay in fps and processing
1. open Raspberry Pi terminal
2. cd /home/pi/TA_weapon_detection_1611512012
3. run command "python3 detect_video_v3_final_no_stream_no_db_save_file_video.py"





Ini adalah repository Tugas Akhir Sarjana saya dari Jurusan Teknik Komputer dengan judul : KLASIFIKASI TINGKAT ANCAMAN KRIMINALITAS BERSENJATA MENGGUNAKAN METODE YOLO.

Dalam penelitian ini, saya menerapkan YOLOv4 Tiny pada raspberry Pi 4 yang dilatih pada google collab untuk mendeteksi adanya objek senjata pistol dan pisau. Saat terdeteksi adanya senjata, sistem akan mengirim notifikasi ke aplikasi android melalui database firebase. Notifikasi yang dikirim yaitu status deteksi berupa jumlah masing-masing kelas senjata dan level ancaman (1-Normal, 2-Sedang, 3-Kritis).
Melalui repositoy ini, saya mengupload file-file source code aplikasi python pada Raspberry Pi 4 dan source code untuk proyek aplikasi android yang saya rancang. Secara garis besar rancangan sistem dapat dilihat pada laporan tugas akhir saya pada link :
Dalam membuat codingan pelatihan dan implementasi YOLOv4 pada python, saya menggunakan referensi repository github dari theAIGuysCode dalam penerapan YOLO dan fungsi-fungsi untuk menghitung jumlah objek pada setiap kelas. Walaupun konteks penelitian yang saya lakukan berbeda, namun logika dasar penerapan YOLO yang saya kembangkan merujuk banyak pada tutorial dari sumber repository tersebut. link untuk tutorial dan implementasi YOLOv4 dari the AIGuysCode dapat dilihat pada pada alamat url : https://github.com/theAIGuysCode/yolov4-custom-functions

Untuk implementasi repository ini, terdapat 3 modul utama :
1- Modul Implementasi YOLOv4 tiny pada Raspberry Pi 4
2- setup database pada Firebase dan onesignal (onesignal untuk memberikan push notification pada aplikasi android)
3- Aplikasi Android untuk monitoring status deteksi


1- Modul Implementasi YOLOv4 Tiny pada Raspberry Pi 4
-Untuk implementasikan source code pada repository ini, digunakan python 3.6 dengan tensorflow 2.3.1 dan opencv 3.4.3. Untuk lebih jelasnya, tutorial dalam melakukan setup raspberry pi untuk deteksi objek menggunakan YOLO dapat dilihat pada alamat url : https://pylessons.com/YOLOv3-TF2-RaspberryPi/
-Untuk menjalankan program deteksi object, sebelumnya perlu dipenuhi kriteria library yang dibutuhkan, yang mana sebagian terdapat pada file requirements.txt, hal ini dapat dicapai dengan menjalankan perintah pip3 install -r requrements.txt. Jika masih terdapat library yang kurang, silahkan jalankan perintah pip untuk menginstall library tersebut.
-Untuk melihat jalannya program deteksi objek senjata dan monitoring deteksi dan aplikasi android dari database yang saya rancang pada penelitian, dapat dicoba dengan :
a) menginstall aplikasi android pada smartphone, apk aplikasi android dapat dilihat pada file androidAPP/Final_App_checkpoint7_DONE100over100.apk
b) menjalankan program utama dengan filename : detect_video_final.py

-jika tidak terdapat error, maka akan tampil pop up opencv yang menampilkan tampilan kamera secara realtime dan melakukan deteksi objek senjata. Dalam implementasinya pada Raspberry Pi 4, didapatkan fps rata-rata sebesar 1.53 fps. saat dicoba pada laptop core i3 dengan ram 4GB dan GPU Nvidia920x, didapat fps rata-rata 6-7 fps
-setelah pindah ke aplikasi android, saat pertama kali menginstall maka akan ditampilkan menu login dengan user ID. untuk percobaan, dapat login dengan akun user ID : 19980989
-setelah berhasil login, klik tombol kamera untuk masuk ke status deteksi secara realtime, yang akan menampilkan status senjata yang terdeteksi, level ancaman, letek kamera, dan streaming dari kamera
-untuk streaming dari kamera, hanya dapat berjalan pada jaringan LAN karena konfigurasi dari database firebase. saat program detect_video_final.py dijalankan, maka akan diupdate nilai ip raspberry pi ke database firebase untuk steraming kamera.
-untuk streaming secara online melalui jaringan internet, dapat menggunakan utilisasi ngrok yang melakukan hosting langsung dari end user.



-jika akan melakukan setup database baru dan sistem push notification baru, maka setelah semua setup dan kebutuhan library terpenuhi, selanjutnya dilakukan setup database firebase dan firebase storage. untuk tutorial setup project database firebase dapat dicoba searching pada mesin pencari.

2- Setup database pada firebase dan onesignal

3-setelah konfigurasi pada firebase selesai, maka beralih ke konfigurasi onesignal untuk dapat mengirimkan notifikasi peringatan ke aplikasi android
untuk konfiguasi pada onesignal dapat disetup user dan masukkan app project dari database firebase.
selanjutnya setup app id pada rogram utama dengan filename : detect_video_final.py pada bagian 
def send_push(threat_lvl, knife_counter, gun_counter):
    str_push = "Camera 1 Alert : Status " + str(threat_lvl) + ", " + str(knife_counter) + " Knife Detected, " + str(gun_counter) + " Gun Detected"
    notification_body = {
        'headings': {'en': 'Ancaman Terdeteksi'},
        'contents': {'en': str_push},
        'included_segments': ['Active Users']
        }
    APP_ID = {APP_ID}
    REST_API_KEY = {REST_API_KEY}
    USER_AUTH_KEY = {USER_AUTH_KEY}
    client1 = Client(app_id=APP_ID, rest_api_key=REST_API_KEY, user_auth_key=USER_AUTH_KEY)
    response1 = client1.send_notification(notification_body)
    
 dari fungsi def send_push diatas, updata nilai APP_ID, REST_API_KEY, dan USER_AUTH_KEY sesuai setupa pada onesignal.
 
 4-Aplikasi android
 dalam perancangan aplikasi android, digunakan app inventor kodular.io yang rancangan aplikasinya dalam filename project kodular dapat dilihat pada filename : androidAPP/Final_App_checkpoint7_DONE100over100.aia
 selanjutnya update api key pada setup database firebase dan api key dari onesignal, selanjutnya export aplikasi ke apk dan install aplikasi. saat aplikasi diinstall maka user akan ditambahkan ke onesignal.


